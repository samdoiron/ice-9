alpha = { 'a'..'z' | 'A'..'Z' }
digit = { '0'..'9' }

WHITESPACE = _{ " " | "\t" | "\n" }

ident = ${ alpha ~ (alpha | digit | "-" | "?" | "!")* }

ident_list = _{ (ident ~ ",")* ~ ident  }

num_literal = @{ digit+ }
func_call = { ident ~ "(" ~ ((expression ~ ",")* ~ expression)? ~ ")" }

func_definition = { "fn" ~ ident ~ block }

infix_op = { "+" | "-" | "*" |  "/" | "%" | ">" | "<" | "|" | "&" | "==" }
infix_expression = { (non_infix_expression | "(" ~ expression ~ ")" ) ~ infix_op ~ expression }
assignment = { ident ~ "=" ~ expression }

not = { "!" ~ expression }

non_infix_expression = { not | func_call | ident | num_literal }
expression = {  infix_expression | "(" ~ expression ~ ")" | non_infix_expression }

conditional = { "if" ~ expression ~ block }
while_loop = { "while" ~ expression ~ block }

echo = { "echo" ~ expression }

statement = _{ while_loop | conditional | ((echo | assignment | expression) ~ ";") }

top_level_statement = _{ func_definition | statement }

block = { "{" ~ statement* ~ "}" }

program = _{ WHITESPACE* ~ top_level_statement* ~ EOI }
